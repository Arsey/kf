<?php

namespace BambukCms\PostBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Translatable\Translatable;
use Gedmo\Translatable\TranslatableListener;

/**
 * @ORM\Entity
 * @ORM\Table(name="post")
 * @Gedmo\TranslationEntity(class="BambukCms\PostBundle\Entity\PostTranslation")
 */
class Post
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @Gedmo\Translatable
     * @ORM\Column(length=250)
     */
    private $title;

    /**
	 * @ORM\ManyToMany(targetEntity="BambukCms\ClubBundle\Entity\Club", inversedBy="posts")
	 * @ORM\JoinTable(name="post_club")
	 */
	private $club;

    /**
     * @Gedmo\Translatable
     * @ORM\Column(type="text", nullable=true)
     */    
    private $description;
    
    /**
     * @var string
     *
     * @ORM\Column(name="image", type="string", length=255, nullable=true)
     */
    private $image;
    
    /**
     * @ORM\Column(name="active", type="boolean", nullable=true)
     */
    protected $active;
    
    /**
     * @Gedmo\Translatable
     * @ORM\Column(type="text", nullable=true)
     */  
    private $content;

    /**
     * @Gedmo\Translatable
     * @ORM\Column(name="content_code", type="text", nullable=true)
     */
    private $content_code;
        
    /**
     * @ORM\Column(name="type", type="integer")
     */
    private $type = 1;
    
    /**
     * @var \DateTime $created
     *
     * @ORM\Column(type="datetime")
     * @Gedmo\Timestampable(on="create")
     */
    private $created;
           
    /**
    * @ORM\Column(name="slug", type="string", length=200)
    */
    private $slug;    
    /**
     * @ORM\Column(name="sort", type="integer")
     */
    private $sort = 0;
    
    /**
     * @ORM\OneToMany(
     *   targetEntity="BambukCms\PostBundle\Entity\PostTranslation",
     *   mappedBy="object",
     *   cascade={"persist", "remove"}
     * )
     */
    private $translations;
    
    /**
     * Initialization properties for new post entity
     */
    public function __construct()
    {
    	$this->category = new ArrayCollection();
    	$this->translations = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
   
    
    /**
     * Get id
     *
     * @return integer 
     */
    
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     * @return Post
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle()
    {
        return $this->title;
    }


    /**
     * Set description
     *
     * @param string $description
     * @return Post
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set image
     *
     * @param string $image
     * @return Post
     */
    public function setImage($image)
    {
        $this->image = $image;

        return $this;
    }

    /**
     * Get image
     *
     * @return string 
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * Set content
     *
     * @param string $content
     * @return Post
     */
    public function setContent($content)
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Get content
     *
     * @return string 
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * Set active
     *
     * @param boolean $active
     * @return Post
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean 
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set sort
     *
     * @param integer $sort
     * @return Post
     */
    public function setSort($sort)
    {
        $this->sort = $sort;

        return $this;
    }

    /**
     * Get sort
     *
     * @return integer 
     */
    public function getSort()
    {
        return $this->sort;
    }

    public function getTranslations()
    {
        return $this->translations;
    }

    public function addTranslation(PostTranslation $t)
    {
        if (!$this->translations->contains($t)) {
            $this->translations[] = $t;
            $t->setObject($this);
        }
    }


   

    /**
     * Remove translations
     *
     * @param \BambukCms\PostBundle\Entity\PostTranslation $translations
     */
    public function removeTranslation(\BambukCms\PostBundle\Entity\PostTranslation $translations)
    {
        $this->translations->removeElement($translations);
    }

    /**
     * Set type
     *
     * @param integer $type
     * @return Post
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return integer 
     */
    public function getType()
    {
        return $this->type;
    }
    
    /**
     * Set slug
     *
     * @param string $slug
     * @return Page
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get slug
     *
     * @return string 
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Add club
     *
     * @param \BambukCms\ClubBundle\Entity\Club $club
     * @return Post
     */
    public function addClub(\BambukCms\ClubBundle\Entity\Club $club)
    {
        $this->club[] = $club;

        return $this;
    }

    /**
     * Remove club
     *
     * @param \BambukCms\ClubBundle\Entity\Club $club
     */
    public function removeClub(\BambukCms\ClubBundle\Entity\Club $club)
    {
        $this->club->removeElement($club);
    }

    /**
     * Get club
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getClub()
    {
        return $this->club;
    }

    /**
     * Set content_code
     *
     * @param string $contentCode
     * @return Post
     */
    public function setContentCode($contentCode)
    {
        $this->content_code = $contentCode;

        return $this;
    }

    /**
     * Get content_code
     *
     * @return string 
     */
    public function getContentCode()
    {
        return $this->content_code;
    }
}
